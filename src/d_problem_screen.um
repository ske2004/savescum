import (
  "d_resources.um"
  "canvas.um"
  "window.um"
  "rect.um"
  "th.um"
  "input.um"
  th_font = "font.um"
)

var (
  font: th_font.Font
  scroll: th.Vf2
  y: th.fu
)

fn restart() {
  y = 0
  canvas.drawRect(th.black, rect.mk(0, 0, window.w, window.h))
}

fn cycle(): bool {
  return window.cycle()
}

fn charToUpper(c: char): char {
  if c >= 'a' && c <= 'z' {
    return char(int(c) + int('A')-int('a'))
  }

  return c
}

fn makeUppercase(text: str): str {
  newText := ""
  for i, c in text {
    newText += charToUpper(c)
  }

  return newText
}

fn fontHeight(): th.fu {
  if font.validate() {
    return font.measure(" ").y
  }
  return 10.0
}

fn drawText(text: str, pos: th.Vf2, color: uint32) {
  if font.validate() {
    font.draw(text, pos, color, 1)
  } else {
    canvas.drawText(makeUppercase(text), pos, color, 2)
  }
}

fn pushText(text: str, color: uint32 = th.white) {
  drawText(text, th.Vf2{0, y}.add(scroll), color)
  y += fontHeight() + 10.0
}

fn init() {
  // Try to load a better font, the fallback will be used otherwise.
  font = th_font.load("data/font/monospace.ttf", 16)
}

oldMousePos := th.Vf2{0, 0}

fn showResourceLoadingError*(loader: ^d_resources.ResourceLoader) {
  init()
  for cycle() {
    newMousePos := input.getMousePos()

    if input.isPressed(input.mouse2) {
      scroll = scroll.add(newMousePos.sub(oldMousePos))
    }

    restart()
    pushText("Drat! I couldn't load some resources:")
    for i, error in loader.errors {
      pushText(" "+error, th.red)
    }
    oldMousePos = newMousePos
  }
  exit()
}
