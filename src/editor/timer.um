import (
  "th.um"
)

type (
  Timer* = struct {
    from, to: int
    going: bool
  }
)

fn mk*(): Timer {
  return Timer{}
}

fn (timer: ^Timer) start*() {
  timer.going = true
  timer.from = th::time
}

fn (timer: ^Timer) stop*() {
  timer.going = false
  timer.to = th::time
}

fn (timer: ^Timer) duration*(): int {
  return timer.going ? th::time - timer.from : timer.to - timer.from
}
