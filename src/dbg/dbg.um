import (
  "rect.um"
  "console.um"
  "../../umbox/fmt/fmt.um"
  "font.um"
)

var (
  console: console::Console
  visualConsole: console::VisualConsole
)

type ConsoleDrawCmd* = struct {
  r: rect::Rect
  font: font::Font
}

fn initConsole*() {
  console = console::Console{}
}

fn logt*(fmt: str, args: ..any) {
  console.write(fmt::vsfmt(fmt, args))
}

// don't use it unless you want to render the console in a special 
// way or something.
fn getConsole*(): ^console::Console {
  return &console
}

fn scrollConsole*(by: real) {
  visualConsole.scrollBy(by*10)
}

// draws fullscreen console.
fn drawConsole*(r: rect::Rect, font: font::Font, scale: real) {
  console::render(&console, &visualConsole, font, r, scale) 
}
