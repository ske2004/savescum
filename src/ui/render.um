import (
  "th.um"
  "font.um"
  "rect.um"
  "image.um"
)

type (
  RenderLabel* = struct {
    font: font::Font
    text: str
    scale: real
  }

  RenderImage* = struct {
    image: image::Image
  }

  RenderImageCrop* = struct {
    image: image::Image
    crop: rect::Rect
  }
)

fn (r: ^RenderLabel) draw*(rect: rect::Rect) {
  size := r.font.measure(r.text).mulf(r.scale)
  pos := th::Vf2{rect.x+(rect.w-size.x)/2, rect.y+(rect.h-size.y)/2}
  r.font.draw(r.text, pos, 0x000000FF, r.scale)
}

fn (r: ^RenderImage) draw*(rect: rect::Rect) {
  r.image.draw({p: rect.getPos(), s: {1, 1}})
}

fn (r: ^RenderImageCrop) draw*(rect: rect::Rect) {
  r.image.blit(r.crop, rect)
}
