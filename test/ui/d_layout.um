import (
  "d_act.um"
  "rect.um"
  "th.um"
)

type Direction* = enum {
  row
  column
}

type Object* = struct {
  size: th.Vf2
  margin: real
}

fn resolve*(objects: []Object, dir: Direction): []d_act.Tool {
  var tools: []d_act.Tool

  p := 0.0

  for i, o in objects {
    p += o.margin
    switch dir {
    case Direction.row:
      tools = append(tools, d_act.Tool{{p, o.margin, o.size.x, o.size.y}})
      p += o.size.x
    case Direction.column:
      tools = append(tools, d_act.Tool{{o.margin, p, o.size.x, o.size.y}})
      p += o.size.y
    }

    p += o.margin
  }

  return tools
}
