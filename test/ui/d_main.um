import (
  "window.um"
  "canvas.um"
  "th.um"
  "input.um"
  "d_act.um"
  "d_layout.um"
)

actstatus := d_act.ActStatus{}

toollist := d_act.ToolList{}

fn init*() {

  window.setup("UI test", 1920, 1080)

  window.onFrame.register({
    object := d_layout.Object{
      .row, {0, 0}, 0, {
        {.row, {666, 400}, 5, {}},
        {.column, {412, 666}, 10, {{.row, {200, 300}, 20, {}}, {.row, {10, 40}, 5, {}}}},
        {.row, {200, 200}, -10, {}}
      }
    }

    resolved := d_layout.resolve(object)

    if len(toollist.tools) != len(resolved) {
      toollist.tools = resolved
    } else {
      for i, tool^ in toollist.tools {
        tool.r = resolved[i].r
      }
    }

    mouseact := d_act.ActViaMouse{
      mouse: input.getMousePos(),
      pressing: input.isPressed(.mouse1),
      tabbed: input.isPressedRepeat(.tab)
    }

    actstatus.update(&toollist, mouseact)

    for i, tool in toollist.tools {
      canvas.drawRect(0x00000044, tool.r)
    }

    d_act.renderDebugInfo(&actstatus)
  })
}
