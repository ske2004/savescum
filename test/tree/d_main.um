import ("tree.um"; "../../src/d_test.um")

fn printElem(elem: ^tree.Elem, depth: int = 0) {
  for i := 0; i < depth; i++ {
    printf("  ")
  }
  printf("%s(%d):\n", elem.key, elem.guid)
  for current := elem.child; current != null; current = current.next {
    printElem(current, depth+1)
  }
}

fn init*() {
  d_test.isUnitTest(true)
  theTree := tree.init()

  for i := 0; i < 100; i++ {
    theTree.pushElement("Root")
      theTree.pushElement("List")
        theTree.pushElement("Element1"); theTree.popElement()
        if i % 2 == 1 {
          theTree.pushElement("Element1.5"); theTree.popElement()
        }
        theTree.pushElement("Element2"); theTree.popElement()
        theTree.pushElement("Element3"); theTree.popElement()
        theTree.pushElement("Element4"); theTree.popElement()
        theTree.pushElement("Element5"); theTree.popElement()
        theTree.pushElement("Element6"); theTree.popElement()
      theTree.popElement()
      theTree.pushElement("Toolbar")
        theTree.pushElement("Skip"); theTree.popElement()
        theTree.pushElement("Reset"); theTree.popElement()
        theTree.pushElement("Start"); theTree.popElement()
      theTree.popElement()
    theTree.popElement()
  }

  printElem(theTree.root)
}