#!/bin/bash

TOPHAT_EMSCRIPTEN_VAR=""
BUTLER_VAR=""

BUTLER_USERNAME=""
BUTLER_PROJECTNAME=""

if [ -x "$(command -v butler)" ]; then
  BUTLER_VAR="butler"
fi

if [ -x "$(command -v butler.exe)" ]; then
  BUTLER_VAR="butler.exe"
fi

if [ -x "$(command -v ../tophat/cmd/th_emscripten_link)" ]; then
  TOPHAT_EMSCRIPTEN_VAR="../tophat/cmd/th_emscripten_link"
fi


if [[ ! -z "$BUTLER_VAR" ]]; then
  if [[ -f user/butler_env.sh ]]; then
    source user/butler_env.sh
  else
    echo "No butler configuration found."
  fi
fi

if [[ ! -f data/img/test.png ]]; then
  echo -e "There's asset files missing. You probably need to install Git LFS.\nAfter installing do \`git lfs install\` and \`git lfs pull\` while in the repo's root folder.\nOtherwise, this shouldn't happen really, I recommend to check if all files are in place."
  exit -1
fi


ARGS=( $@ )
SILENT=""
PROF=""
TESTTYPE="any"
NARG=0
PROG_NAME=$0
TOPHAT=./tophat
COMPILER=no_compiler_lol

# Probe if we are running WSL.
if grep -qi microsoft /proc/version; then
  TOPHAT=./tophat.exe
fi

# Probe if we are running some bash emulator on Windows
if [[ "`uname`" == "WindowsNT" ]]; then
  TOPHAT=./tophat.exe
fi

if [ -x "$(command -v gcc)" ]; then
  COMPILER=gcc
fi

if [ -x "$(command -v clang)" ]; then
  COMPILER=clang
fi

# TODO: emcc compiler support, we need build target for web.
# TODO: cl compiler support, because windows doesn't have the same cli

no_compiler_lol() {
  echo "WARNING: NO COMPILER, RUNNING AS IS"
}

# $1 offset
getarg() {
  echo ${ARGS[$NARG + $1]}
}

engage() {
  if [ -z "$PROF" ]; then
    $TOPHAT $SILENT $@
  else
    # https://github.com/colrdavidson/spall
    # https://gravitymoth.com/spall/spall-web.html
    $TOPHAT $PROF trace.json $SILENT $@
  fi
}

# $1 test name
target_test() {
  if [ -z "$1" ]; then
    echo -e "What am I gonna test? \n$PROG_NAME test test_name" 
    exit 1
  elif [[ -d "test/$1" && -f "test/$1/d_main.um" ]]; then 
    TESTTYPE=$TESTTYPE TEST_PFX="test/$1/" engage -main "test/$1/d_main.um"
  else
    echo -e "I don't know test \"$1\".\nTests are in ./test directory, you must make a folder named \"$1\" inside it, and put a d_main.um file in it. That's the way it is!" 
    exit 2
  fi
}

target_emscripten() {
  mv main.um main_temp.um
  mv d_main_game.um main.um
  $TOPHAT_EMSCRIPTEN_VAR data src main.um user
  mv main.um d_main_game.um
  mv main_temp.um main.um
}

# Compiles external C code
target_compile_extern() {
  $COMPILER external/jumbo.c -shared -o src/d_extern.umi
}

hasargs=1

# Fetch all sparse args
while [ $hasargs -eq 1 ]
do
  case `getarg 0` in
    prof)
      PROF=-prof
      NARG=$(( $NARG + 1 ))
    ;; 
    jprof)
      PROF=-prof\ -profjson
      NARG=$(( $NARG + 1 ))
    ;; 
    silent)
      NARG=$(( $NARG + 1 ))
      SILENT=-silent
    ;; 
    testbed)
      NARG=$(( $NARG + 1 ))
      TESTTYPE="testbed"
    ;; 
    unit)
      NARG=$(( $NARG + 1 ))
      TESTTYPE="unit"
    ;; 
    *)
      hasargs=0
    ;;
  esac
done

target_compile_extern
# user data
mkdir -p user

case `getarg 0` in
  play)
    engage -main main.um
  ;;
  check)
    engage check -main main.um
    
    for d in test/*; do
      TEST_PFX="%d/" $TOPHAT $SILENT check main "$d/d_main.um"
    done
  ;;
  testall)
    for d in test/*; do
      echo "Testing ---" `basename $d`
      target_test `basename $d`
    done
  ;;
  test)
    target_test `getarg 1`
  ;;
  publish)
    mkdir -p pkg
    mkdir -p pkg/native
    cp -r ./src ./data ./tophat.exe ./main.um ./pkg/native 
    if [[ -z "$BUTLER_VAR" ]]; then
      echo "Butler not found. Skipping publishing to itch.io"
    else 
      if [[ ! -z "$BUTLER_USERNAME" ]]; then
        if [[ ! -z "$BUTLER_PROJECTNAME" ]]; then
          if [[ ! -z "$TOPHAT_EMSCRIPTEN_VAR" ]]; then
            echo "Publishing to itch.io!"
            target_emscripten
            mv wasm-out pkg
            $BUTLER_VAR push pkg/wasm-out $BUTLER_USERNAME/$BUTLER_PROJECTNAME:index
          else
            echo "Can't publish to itch.io: Can't find th_emscripten_link."
          fi
        else
          echo "Can't publish to itch.io: BUTLER_PROJECTNAME is not defined. Define it in user/butler_env.sh file."
        fi
      else
        echo "Can't publish to itch.io: BUTLER_USERNAME is not defined. Define it in user/butler_env.sh file."
      fi
    fi
  ;;
  *)
    echo "You can do: test, check, play"
    exit 3
  ;;
esac
